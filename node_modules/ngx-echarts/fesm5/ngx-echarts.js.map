{"version":3,"file":"ngx-echarts.js","sources":["ngx-echarts/lib/change-filter.ts","ngx-echarts/lib/ngx-echarts.directive.ts","ngx-echarts/lib/ngx-echarts.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { SimpleChanges } from '@angular/core';\nimport { Observable, of, EMPTY } from 'rxjs';\n\nexport class ChangeFilter {\n  constructor(private _changes: SimpleChanges) { }\n\n  static of(changes: SimpleChanges) {\n    return new ChangeFilter(changes);\n  }\n\n  notEmpty<T>(key: string): Observable<T> {\n    if (this._changes[key]) {\n      const value: T = this._changes[key].currentValue;\n\n      if (value !== undefined && value !== null) {\n        return of(value);\n      }\n    }\n    return EMPTY;\n  }\n\n  has<T>(key: string): Observable<T> {\n    if (this._changes[key]) {\n      const value: T = this._changes[key].currentValue;\n      return of(value);\n    }\n    return EMPTY;\n  }\n\n  notFirst<T>(key: string): Observable<T> {\n    if (this._changes[key] && !this._changes[key].isFirstChange()) {\n      const value: T = this._changes[key].currentValue;\n      return of(value);\n    }\n    return EMPTY;\n  }\n\n  notFirstAndEmpty<T>(key: string): Observable<T> {\n    if (this._changes[key] && !this._changes[key].isFirstChange()) {\n      const value: T = this._changes[key].currentValue;\n\n      if (value !== undefined && value !== null) {\n        return of(value);\n      }\n    }\n    return EMPTY;\n  }\n}\n","import { AfterViewInit, Directive, DoCheck, ElementRef, EventEmitter, Input, NgZone, OnChanges, OnDestroy, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { EChartOption, ECharts, init } from 'echarts';\nimport { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime, switchMap } from 'rxjs/operators';\nimport { ChangeFilter } from './change-filter';\n\n@Directive({\n  selector: 'echarts, [echarts]',\n})\nexport class NgxEchartsDirective implements OnChanges, OnDestroy, OnInit, DoCheck, AfterViewInit {\n  @Input() options: EChartOption;\n  @Input() theme: string;\n  @Input() loading: boolean;\n  @Input() initOpts: {\n    devicePixelRatio?: number\n    renderer?: string\n    width?: number | string\n    height?: number | string\n  };\n  @Input() merge: EChartOption;\n  @Input() autoResize = true;\n  @Input() loadingType = 'default';\n  @Input() loadingOpts: object;\n  @Input() detectEventChanges = true; // deprecated, left for compatibility reasons to avoid triggering major version\n\n  // ngx-echarts events\n  @Output() chartInit = new EventEmitter<ECharts>();\n\n  // echarts mouse events\n  @Output() chartClick = this.createLazyEvent('click');\n  @Output() chartDblClick = this.createLazyEvent('dblclick');\n  @Output() chartMouseDown = this.createLazyEvent('mousedown');\n  @Output() chartMouseMove = this.createLazyEvent('mousemove');\n  @Output() chartMouseUp = this.createLazyEvent('mouseup');\n  @Output() chartMouseOver = this.createLazyEvent('mouseover');\n  @Output() chartMouseOut = this.createLazyEvent('mouseout');\n  @Output() chartGlobalOut = this.createLazyEvent('globalout');\n  @Output() chartContextMenu = this.createLazyEvent('contextmenu');\n\n  // echarts mouse events\n  @Output() chartLegendSelectChanged = this.createLazyEvent('legendselectchanged');\n  @Output() chartLegendSelected = this.createLazyEvent('legendselected');\n  @Output() chartLegendUnselected = this.createLazyEvent('legendunselected');\n  @Output() chartLegendScroll = this.createLazyEvent('legendscroll');\n  @Output() chartDataZoom = this.createLazyEvent('datazoom');\n  @Output() chartDataRangeSelected = this.createLazyEvent('datarangeselected');\n  @Output() chartTimelineChanged = this.createLazyEvent('timelinechanged');\n  @Output() chartTimelinePlayChanged = this.createLazyEvent('timelineplaychanged');\n  @Output() chartRestore = this.createLazyEvent('restore');\n  @Output() chartDataViewChanged = this.createLazyEvent('dataviewchanged');\n  @Output() chartMagicTypeChanged = this.createLazyEvent('magictypechanged');\n  @Output() chartPieSelectChanged = this.createLazyEvent('pieselectchanged');\n  @Output() chartPieSelected = this.createLazyEvent('pieselected');\n  @Output() chartPieUnselected = this.createLazyEvent('pieunselected');\n  @Output() chartMapSelectChanged = this.createLazyEvent('mapselectchanged');\n  @Output() chartMapSelected = this.createLazyEvent('mapselected');\n  @Output() chartMapUnselected = this.createLazyEvent('mapunselected');\n  @Output() chartAxisAreaSelected = this.createLazyEvent('axisareaselected');\n  @Output() chartFocusNodeAdjacency = this.createLazyEvent('focusnodeadjacency');\n  @Output() chartUnfocusNodeAdjacency = this.createLazyEvent('unfocusnodeadjacency');\n  @Output() chartBrush = this.createLazyEvent('brush');\n  @Output() chartBrushSelected = this.createLazyEvent('brushselected');\n  @Output() chartRendered = this.createLazyEvent('rendered');\n  @Output() chartFinished = this.createLazyEvent('finished');\n\n  private chart: ECharts;\n  private currentOffsetWidth = 0;\n  private currentOffsetHeight = 0;\n  private currentWindowWidth: number;\n  private resizeSub: Subscription;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const filter = ChangeFilter.of(changes);\n    filter.notFirstAndEmpty<any>('options').subscribe(opt => this.onOptionsChange(opt));\n    filter.notFirstAndEmpty<any>('merge').subscribe(opt => this.setOption(opt));\n    filter.has<boolean>('loading').subscribe(v => this.toggleLoading(!!v));\n    filter.notFirst<string>('theme').subscribe(() => this.refreshChart());\n  }\n\n  ngOnInit() {\n    this.resizeSub = fromEvent(window, 'resize').pipe(debounceTime(50)).subscribe(() => {\n      if (this.autoResize && window.innerWidth !== this.currentWindowWidth) {\n        this.currentWindowWidth = window.innerWidth;\n        this.currentOffsetWidth = this.el.nativeElement.offsetWidth;\n        this.currentOffsetHeight = this.el.nativeElement.offsetHeight;\n        this.resize();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.resizeSub) {\n      this.resizeSub.unsubscribe();\n    }\n    this.dispose();\n  }\n\n  ngDoCheck() {\n    // No heavy work in DoCheck!\n    if (this.chart && this.autoResize) {\n      const offsetWidth = this.el.nativeElement.offsetWidth;\n      const offsetHeight = this.el.nativeElement.offsetHeight;\n\n      if (this.currentOffsetWidth !== offsetWidth || this.currentOffsetHeight !== offsetHeight) {\n        this.currentOffsetWidth = offsetWidth;\n        this.currentOffsetHeight = offsetHeight;\n        this.resize();\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => this.initChart());\n  }\n\n  private dispose() {\n    if (this.chart) {\n      this.chart.dispose();\n      this.chart = null;\n    }\n  }\n\n  private resize() {\n    if (this.chart) {\n      this.chart.resize();\n    }\n  }\n\n  private toggleLoading(loading: boolean) {\n    if (this.chart) {\n      loading ? this.chart.showLoading(this.loadingType, this.loadingOpts) : this.chart.hideLoading();\n    }\n  }\n\n  private setOption(option: any, opts?: any) {\n    if (this.chart) {\n      this.chart.setOption(option, opts);\n    }\n  }\n\n  private refreshChart() {\n    this.dispose();\n    this.initChart();\n  }\n\n  private createChart() {\n    this.currentWindowWidth = window.innerWidth;\n    this.currentOffsetWidth = this.el.nativeElement.offsetWidth;\n    this.currentOffsetHeight = this.el.nativeElement.offsetHeight;\n    const dom = this.el.nativeElement;\n\n    if (window && window.getComputedStyle) {\n      const prop = window.getComputedStyle(dom, null).getPropertyValue('height');\n      if ((!prop || prop === '0px') &&\n        (!dom.style.height || dom.style.height === '0px')) {\n        dom.style.height = '400px';\n      }\n    }\n\n    return this.ngZone.runOutsideAngular(() => init(dom, this.theme, this.initOpts));\n  }\n\n  private initChart() {\n    this.onOptionsChange(this.options);\n\n    if (this.merge && this.chart) {\n      this.setOption(this.merge);\n    }\n  }\n\n  private onOptionsChange(opt: EChartOption) {\n    if (opt) {\n      if (!this.chart) {\n        this.chart = this.createChart();\n        this.chartInit.emit(this.chart);\n      }\n\n      this.chart.setOption(this.options, true);\n    }\n  }\n\n  // allows to lazily bind to only those events that are requested through the `@Output` by parent components\n  // see https://stackoverflow.com/questions/51787972/optimal-reentering-the-ngzone-from-eventemitter-event for more info\n  private createLazyEvent<T>(eventName: string): EventEmitter<T> {\n    return this.chartInit.pipe(\n      switchMap((chart: ECharts) => new Observable(observer => {\n        chart.on(eventName, (data: T) => this.ngZone.run(() => observer.next(data)));\n        return () => chart.off(eventName);\n      }))\n    ) as EventEmitter<T>;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxEchartsDirective } from './ngx-echarts.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [\n    NgxEchartsDirective\n  ],\n  exports: [\n    NgxEchartsDirective\n  ]\n})\nexport class NgxEchartsModule { }\n"]}